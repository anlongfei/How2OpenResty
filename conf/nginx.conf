worker_processes  1;
error_log logs/error.log;
events {
    worker_connections 1024;
}
http {
    server {
        listen 8080;
        location / {
            default_type text/html;
            content_by_lua_block {
                ngx.say("hello, world")
            }
        }

        location = /sum {
            internal;
            content_by_lua_block {
                ngx.sleep(0.1)
                    local args = ngx.req.get_uri_args()
                    ngx.print(tonumber(args.a) + tonumber(args.b))
            }
        }

        location = /subduction {
            internal;
            content_by_lua_block {
                ngx.sleep(0.1)
                    local args = ngx.req.get_uri_args()
                    ngx.print(tonumber(args.a) - tonumber(args.b))
            }
        }

        location = /app/test_parallels {
            content_by_lua_block {
                local start_time = ngx.now()
                    local res1, res2 = ngx.location.capture_multi( {
                                                                   {"/sum", {args={a=3, b=8}}},
                                                                   {"/subduction", {args={a=3, b=8}}}
                                                                   })
                ngx.say("status:", res1.status, " response:", res1.body)
                    ngx.say("status:", res2.status, " response:", res2.body)
                    ngx.say("time used:", ngx.now() - start_time)
            }
        }

        location = /app/test_queue {
            content_by_lua_block {
                local start_time = ngx.now()
                    local res1 = ngx.location.capture_multi( {
                                                             {"/sum", {args={a=3, b=8}}}
                                                             })
                local res2 = ngx.location.capture_multi( {
                                                         {"/subduction", {args={a=3, b=8}}}
                                                         })
                ngx.say("status:", res1.status, " response:", res1.body)
                    ngx.say("status:", res2.status, " response:", res2.body)
                    ngx.say("time used:", ngx.now() - start_time)
            }
        }

    }
}
